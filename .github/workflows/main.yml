# This is a basic workflow to help you get started with Actions
name: Docker Image Ci-Cd Pipeline

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains multiple jobs
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
      - name: Install dependencies
        run: |
          npm ci 
      # build the apps     
      - name: build
        run: |
          npm run build
          
  Jfrog-Login:
   runs-on: ubuntu-latest
   steps:
    - uses: docker/login-action@v1
    - name: Login to JFrog  
    
      with:
          registry: underconstruction.jfrog.io
          username: ${{ secrets.JFROG_USERNAME}}
          password: ${{ secrets.JFROG_PASSWORD}}
          
    - name: Building the Docker Image
      run: docker build --tag underconstruction.jfrog.io/docker-dev/cell-game:version-${{ github.run_id }}-${{ github.run_attempt }} .
        

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
          image-ref: 'underconstruction.jfrog.io/docker-dev/cell-game:version-${{ github.run_id }}-${{ github.run_attempt }}'
          exit-code: '0'
          ignore-unfixed: true 
          format: 'sarif'
          output: 'trivy-results.sarif'
          vuln-type: 'os,library'
          severity: 'LOW,MEDIUM'
          
          
    - name: Pushing the Image into our Artifactory
      run: docker push underconstruction.jfrog.io/docker-dev/cell-game:version-${{ github.run_id }}-${{ github.run_attempt }}
        
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
          sarif_file: 'trivy-results.sarif'
