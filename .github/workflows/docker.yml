name: Docker Image Ci-Cd Pipeline
on:
  push:
     branches: [ main ]
  pull_request:
     branches: [ main ]
  workflow_dispatch:

jobs:
  Setting-Up-The-Node-Env:
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

  Installing-App-Dependencies:
    runs-on: ubuntu-latest
    needs: Setting-Up-The-Node-Env
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          npm ci     
      - name: build
        run: |
          npm run build

  Scanning:
    runs-on: ubuntu-latest
    needs: Installing-App-Dependencies
    steps:
      - uses: actions/checkout@v2
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}
          exit-code: '0'
          ignore-unfixed: true 
          format: 'sarif'
          output: 'trivy-results.sarif'
          vuln-type: 'os,library'
          severity: 'LOW,MEDIUM'

  Jfrog-Login:
    runs-on: ubuntu-latest
    needs: Scanning
    steps:
      - uses: actions/checkout@v2
      - name: Login to JFrog 
        uses: docker/login-action@v1
        with:
          registry: underconstruction.jfrog.io
          username: ${{ secrets.JFROG_USERNAME}}
          password: ${{ secrets.JFROG_PASSWORD}}

  Docker-Build:
    runs-on: ubuntu-latest
    needs: Jfrog-Login
    steps:
      - name: Building the Docker Image
        run: docker build --tag underconstruction.jfrog.io/docker-dev/cell-game:version-${{ github.run_id }}-${{ github.run_attempt }} .
  
  Docker-validate:
    runs-on: ubuntu-latest
    needs: Docker-Build
    steps:
      - uses: actions/checkout@v2
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'underconstruction.jfrog.io/docker-dev/cell-game:version-${{ github.run_id }}-${{ github.run_attempt }}'
          exit-code: '0'
          ignore-unfixed: true 
          format: 'sarif'
          output: 'trivy-results.sarif'
          vuln-type: 'os,library'
          severity: 'LOW,MEDIUM'

  Push-To-Artifactory:
    runs-on: ubuntu-latest
    needs: Docker-validate
    steps:
      - uses: actions/checkout@v2
      - name: Pushing the Image into our Artifactory
        run: docker push underconstruction.jfrog.io/docker-dev/cell-game:version-${{ github.run_id }}-${{ github.run_attempt }}

  Upload-Trivy-Scan-Results:
    runs-on: ubuntu-latest
    needs: Push-To-Artifactory
    steps:
      - uses: actions/checkout@v2
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'
